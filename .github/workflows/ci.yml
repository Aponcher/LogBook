name: CI

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: logbook
          POSTGRES_USER: user
          POSTGRES_PASSWORD: dummy
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Define condition for main or tag push
      IS_MAIN_OR_TAG: ${{ github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean verify

      - name: Log in to Docker Hub
        if: env.IS_MAIN_OR_TAG == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and tag Docker image
        if: env.IS_MAIN_OR_TAG == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/logbook-app:latest .
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF##*/}
            docker tag ${{ secrets.DOCKER_USERNAME }}/logbook-app:latest ${{ secrets.DOCKER_USERNAME }}/logbook-app:$TAG
          fi

      - name: Push to Docker Hub
        if: env.IS_MAIN_OR_TAG == 'true'
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/logbook-app:latest
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF##*/}
            docker push ${{ secrets.DOCKER_USERNAME }}/logbook-app:$TAG
          fi

      - name: Configure AWS credentials
        if: env.IS_MAIN_OR_TAG == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log in to Amazon ECR
        if: env.IS_MAIN_OR_TAG == 'true'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag for ECR
        if: env.IS_MAIN_OR_TAG == 'true'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/logbook-app:latest ${{ steps.login-ecr.outputs.registry }}/logbook-repository:latest
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF##*/}
            docker tag ${{ secrets.DOCKER_USERNAME }}/logbook-app:latest ${{ steps.login-ecr.outputs.registry }}/logbook-repository:$TAG

      - name: Push to ECR
        if: env.IS_MAIN_OR_TAG == 'true'
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/logbook-repository:latest
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG=${GITHUB_REF##*/}
            docker push ${{ steps.login-ecr.outputs.registry }}/logbook-repository:$TAG
          fi